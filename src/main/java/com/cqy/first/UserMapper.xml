<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="employeeDao">
    <!--数据库查询时起别名需要使用resultMap-->
    <!--column是数据库中字段的名称-->
    <!--property是实体类中的属性名-->
    <resultMap id="empResult" type="com.cqy.secend.Employee">
        <id column="id" property="id"></id>
        <result column="uname" property="name"></result>
        <result column="age" property="age"></result>
        <result column="sex" property="sex"></result>
        <result column="phone" property="phone"></result>
    </resultMap>
    <insert id="add">
        insert into employee (usernum,password) values ('1466630490','123456')
    </insert>
    <insert id="add1" parameterType="com.cqy.secend.Employee">
        insert into employee (name,age,sex,phone) values (#{name},#{age},#{sex},#{phone})
    </insert>
    <!--使用别名-->
    <insert id="add2" parameterType="employee">
        insert into employee (name,age,sex,phone) values (#{name},#{age},#{sex},#{phone})
    </insert>
    <select id="selectBySex" parameterType="string" resultMap="empResult">
        select id, name uname,age,sex,phone from employee where sex=#{sex}
    </select>
    <select id="selectById" parameterType="int" resultMap="empResult">
        select id,name uname,age,sex,phone from employee where id <![CDATA[<=]]> #{id}
    </select>
    <!--映射代理的基本用法-->
    <!--映射代理的四条规则-->
    <!--1,代理的接口全限定名应与namespace值一致-->
    <!--2,代理的接口中方法名应与映射文件的id值一致-->
    <!--3,代理的接口中方法返回值应与映射文件中的resultType值一致-->
    <!--4，代理的接口中的方法参数应与映射文件中的parameterType值一致-->

    <!--获取自增的id-->
    <insert id="add" parameterType="employee">
        insert into employee(name,age,sex,phone) values (#{name},#{age},#{sex},#{phone})
        <selectKey order="AFTER" keyProperty="id" resultType="int">
            select last_insert_id()
        </selectKey>
    </insert>
    <insert id="add2" parameterType="employee">
        insert into employee(
        <trim suffixOverrides=",">
            <if test="name!=null">
                name,
            </if>
            <if test="age!=null">
                age,
            </if>
            <if test="sex!=null">
                sex,
            </if>
            <if test="phone!=null">
                phone
            </if>
        </trim>
        ) values (
        <trim suffixOverrides=",">
            <if test="name!=null">
                #{name},
            </if>
            <if test="age!=null">
                #{age}
            </if>
            <if test="sex!=null">
                #{sex}
            </if>
            <if test="phone!=null">
                #{phone}
            </if>
        </trim>
        )
    </insert>

</mapper>